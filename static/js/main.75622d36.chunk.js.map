{"version":3,"sources":["components/layout/Header.js","context.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","branding","react_default","a","createElement","className","href","Link","to","defaultProps","Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","children","Component","Consumer","TextInputGroup","_ref","label","name","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","email","phone","errors","e","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this2","_this$state2","bind","layout_TextInputGroup","EditContact","updateContact","match","params","put","extractedContact","Contact","showContactInfo","onShowClick","onDeleteClick","delete","t0","_this$props$contact","onClick","style","cursor","color","float","marginRight","Contacts","Fragment","contacts_Contact","About","class","NotFound","Test","title","body","fetch","then","response","json","console","log","App","context_Provider","BrowserRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"yQAMMA,EAAS,SAAAC,GAAS,IAEdC,EAAaD,EAAbC,SAER,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sDACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,KAAGE,KAAK,IAAID,UAAU,gBACnBJ,GAEHC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,IAAIH,UAAU,YACrBH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBADf,UAIFH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,eAAeH,UAAU,YAChCH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBADf,SAIFH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,SAASH,UAAU,YAC1BH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBADf,gBAWdN,EAAOU,aAAe,CACpBR,SAAU,UAOGF,yEC7CTW,EAAUC,IAAMC,gBAGhBC,EAAU,SAACC,EAAOC,GACtB,OAAQA,EAAOC,MACb,IAAK,iBACH,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACFH,EADL,CAEEK,SAAUL,EAAMK,SAASC,OACvB,SAAAC,GAAO,OAAIA,EAAQC,KAAOP,EAAOQ,YAGvC,IAAK,cACH,OAAON,OAAAC,EAAA,EAAAD,CAAA,GACFH,EADL,CAEEK,SAAQ,CAAGJ,EAAOQ,SAAVC,OAAAP,OAAAQ,EAAA,EAAAR,CAAsBH,EAAMK,aAExC,IAAK,iBACH,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GACFH,EADL,CAEEK,SAAUL,EAAMK,SAASO,IAAI,SAAAL,GAAO,OAClCA,EAAQC,KAAOP,EAAOQ,QAAQD,GACzBD,EAAUN,EAAOQ,QAClBF,MAGV,QACE,OAAOP,IAIAa,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAb,OAAAc,EAAA,EAAAd,CAAAe,KAAAL,GAAA,QAAAM,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAR,EAAAb,OAAAsB,EAAA,EAAAtB,CAAAe,MAAAH,EAAAZ,OAAAuB,EAAA,EAAAvB,CAAAU,IAAAc,KAAAC,MAAAb,EAAA,CAAAG,MAAAR,OAAAY,MACEtB,MAAQ,CACNK,SAAU,GACVwB,SAAU,SAAA5B,GACRe,EAAKc,SAAS,SAAA9B,GAAK,OAAID,EAAQC,EAAOC,OAJ5Ce,EAAA,OAAAb,OAAA4B,EAAA,EAAA5B,CAAAU,EAAAC,GAAAX,OAAA6B,EAAA,EAAA7B,CAAAU,EAAA,EAAAoB,IAAA,oBAAAC,MAAA,eAAAC,EAAAhC,OAAAiC,EAAA,EAAAjC,CAAAkC,EAAAhD,EAAAiD,KAAA,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAhD,EAAAoD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAasBC,IAAMC,IAAI,8CAbhC,OAaUN,EAbVE,EAAAK,KAcI7B,KAAKY,SAAS,CAAEzB,SAAUmC,EAAIQ,OAdlC,wBAAAN,EAAAO,SAAAV,EAAArB,SAAA,yBAAAiB,EAAAP,MAAAV,KAAAE,YAAA,KAAAa,IAAA,SAAAC,MAAA,WAkBI,OACE9C,EAAAC,EAAAC,cAACM,EAAQiB,SAAT,CAAkBqB,MAAOhB,KAAKlB,OAC3BkB,KAAKhC,MAAMgE,cApBpBrC,EAAA,CAA8BsC,aA0BjBC,EAAWxD,EAAQwD,0BCxD1BC,EAAiB,SAAAC,GAQjB,IAPJC,EAOID,EAPJC,MACAC,EAMIF,EANJE,KACAtB,EAKIoB,EALJpB,MACAuB,EAIIH,EAJJG,YACAvD,EAGIoD,EAHJpD,KACAwD,EAEIJ,EAFJI,SACAC,EACIL,EADJK,MAEA,OACEvE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SAAOsE,QAASJ,GAAOD,GACvBnE,EAAAC,EAAAC,cAAA,SACEY,KAAMA,EACNX,UAAWsE,IAAW,+BAAgC,CACpDC,aAAcH,IAEhBF,YAAaA,EACbD,KAAMA,EACNtB,MAAOA,EACPwB,SAAUA,IAEXC,GAASvE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAoBoE,KAenDN,EAAe1D,aAAe,CAC5BO,KAAM,QAGOmD,QC+DAU,6MArGb/D,MAAQ,CACNwD,KAAM,GACNQ,MAAO,GACPC,MAAO,GACPC,OAAQ,MAGVR,SAAW,SAAAS,GACTnD,EAAKc,SAAL3B,OAAAiE,EAAA,EAAAjE,CAAA,GAAiBgE,EAAEE,OAAOb,KAAOW,EAAEE,OAAOnC,WAG5CoC,+CAAW,SAAA/B,EAAOV,EAAUsC,GAAjB,IAAAI,EAAAf,EAAAQ,EAAAC,EAAAO,EAAAhC,EAAA,OAAAH,EAAAhD,EAAAoD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACTuB,EAAEM,iBADOF,EAEsBvD,EAAKhB,MAA5BwD,EAFCe,EAEDf,KAAMQ,EAFLO,EAEKP,MAAOC,EAFZM,EAEYN,MAER,KAATT,EAJK,CAAAd,EAAAE,KAAA,eAKP5B,EAAKc,SAAS,CAAEoC,OAAQ,CAAEV,KAAM,sBALzBd,EAAAgC,OAAA,oBAQK,KAAVV,EARK,CAAAtB,EAAAE,KAAA,eASP5B,EAAKc,SAAS,CAAEoC,OAAQ,CAAEF,MAAO,uBAT1BtB,EAAAgC,OAAA,oBAYK,KAAVT,EAZK,CAAAvB,EAAAE,KAAA,gBAaP5B,EAAKc,SAAS,CAAEoC,OAAQ,CAAED,MAAO,uBAb1BvB,EAAAgC,OAAA,yBAiBHF,EAAa,CACjBhB,OACAQ,QACAC,SApBOvB,EAAAE,KAAA,GA2BSC,IAAM8B,KACtB,6CACAH,GA7BO,QA2BHhC,EA3BGE,EAAAK,KA+BTlB,EAAS,CAAE3B,KAAM,cAAeO,QAAS+B,EAAIQ,OAE7ChC,EAAKc,SAAS,CAAE0B,KAAM,GAAIQ,MAAO,GAAIC,MAAO,GAAIC,OAAQ,KAGxDlD,EAAK9B,MAAM0F,QAAQC,KAAK,KApCf,yBAAAnC,EAAAO,SAAAV,EAAArB,yIAuCF,IAAA4D,EAAA5D,KAAA6D,EACgC7D,KAAKlB,MAApCwD,EADDuB,EACCvB,KAAMQ,EADPe,EACOf,MAAOC,EADdc,EACcd,MAAOC,EADrBa,EACqBb,OAC5B,OACE9E,EAAAC,EAAAC,cAAC8D,EAAD,KACG,SAAAlB,GAAS,IACAL,EAAaK,EAAbL,SACR,OACEzC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,eACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,QAAMgF,SAAUQ,EAAKR,SAASU,KAAKF,EAAMjD,IACvCzC,EAAAC,EAAAC,cAAC2F,EAAD,CACE1B,MAAM,OACNC,KAAK,OACLC,YAAY,gBACZvB,MAAOsB,EACPE,SAAUoB,EAAKpB,SACfC,MAAOO,EAAOV,OAEhBpE,EAAAC,EAAAC,cAAC2F,EAAD,CACE1B,MAAM,QACNC,KAAK,QACLC,YAAY,iBACZvB,MAAO8B,EACPN,SAAUoB,EAAKpB,SACfxD,KAAK,QACLyD,MAAOO,EAAOF,QAEhB5E,EAAAC,EAAAC,cAAC2F,EAAD,CACE1B,MAAM,QACNC,KAAK,QACLC,YAAY,iBACZvB,MAAO+B,EACPP,SAAUoB,EAAKpB,SACfC,MAAOO,EAAOD,QAEhB7E,EAAAC,EAAAC,cAAA,SACEY,KAAK,SACLgC,MAAM,cACN3C,UAAU,wCA1FL4D,aCoHV+B,6MAnHblF,MAAQ,CACNwD,KAAM,GACNQ,MAAO,GACPC,MAAO,GACPC,OAAQ,MAkBVR,SAAW,SAAAS,GACTnD,EAAKc,SAAL3B,OAAAiE,EAAA,EAAAjE,CAAA,GAAiBgE,EAAEE,OAAOb,KAAOW,EAAEE,OAAOnC,WAG5CoC,+CAAW,SAAA/B,EAAOV,EAAUsC,GAAjB,IAAAI,EAAAf,EAAAQ,EAAAC,EAAAkB,EAAA3E,EAAAgC,EAAA,OAAAH,EAAAhD,EAAAoD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACTuB,EAAEM,iBADOF,EAEsBvD,EAAKhB,MAA5BwD,EAFCe,EAEDf,KAAMQ,EAFLO,EAEKP,MAAOC,EAFZM,EAEYN,MAER,KAATT,EAJK,CAAAd,EAAAE,KAAA,eAKP5B,EAAKc,SAAS,CAAEoC,OAAQ,CAAEV,KAAM,sBALzBd,EAAAgC,OAAA,oBAQK,KAAVV,EARK,CAAAtB,EAAAE,KAAA,eASP5B,EAAKc,SAAS,CAAEoC,OAAQ,CAAEF,MAAO,uBAT1BtB,EAAAgC,OAAA,oBAYK,KAAVT,EAZK,CAAAvB,EAAAE,KAAA,gBAaP5B,EAAKc,SAAS,CAAEoC,OAAQ,CAAED,MAAO,uBAb1BvB,EAAAgC,OAAA,yBAiBHS,EAAgB,CACpB3B,OACAQ,QACAC,SAGMzD,EAAOQ,EAAK9B,MAAMkG,MAAMC,OAAxB7E,GAvBCkC,EAAAE,KAAA,GAyBSC,IAAMyC,IAAN,8CAAA5E,OAC8BF,GAC9C2E,GA3BO,QAyBH3C,EAzBGE,EAAAK,KA8BTlB,EAAS,CAAE3B,KAAM,iBAAkBO,QAAS+B,EAAIQ,OAEhDhC,EAAKc,SAAS,CAAE0B,KAAM,GAAIQ,MAAO,GAAIC,MAAO,GAAIC,OAAQ,KAGxDlD,EAAK9B,MAAM0F,QAAQC,KAAK,KAnCf,yBAAAnC,EAAAO,SAAAV,EAAArB,6QAlBDV,EAAOU,KAAKhC,MAAMkG,MAAMC,OAAxB7E,YACUqC,IAAMC,IAAN,8CAAApC,OAC8BF,WAD1CgC,SAIA+C,EAAmB/C,EAAIQ,KAE7B9B,KAAKY,SAAS,CACZ0B,KAAM+B,EAAiB/B,KACvBQ,MAAOuB,EAAiBvB,MACxBC,MAAOsB,EAAiBtB,2IA8CnB,IAAAa,EAAA5D,KAAA6D,EACgC7D,KAAKlB,MAApCwD,EADDuB,EACCvB,KAAMQ,EADPe,EACOf,MAAOC,EADdc,EACcd,MAAOC,EADrBa,EACqBb,OAC5B,OACE9E,EAAAC,EAAAC,cAAC8D,EAAD,KACG,SAAAlB,GAAS,IACAL,EAAaK,EAAbL,SACR,OACEzC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,gBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,QAAMgF,SAAUQ,EAAKR,SAASU,KAAKF,EAAMjD,IACvCzC,EAAAC,EAAAC,cAAC2F,EAAD,CACE1B,MAAM,OACNC,KAAK,OACLC,YAAY,gBACZvB,MAAOsB,EACPE,SAAUoB,EAAKpB,SACfC,MAAOO,EAAOV,OAEhBpE,EAAAC,EAAAC,cAAC2F,EAAD,CACE1B,MAAM,QACNC,KAAK,QACLC,YAAY,iBACZvB,MAAO8B,EACPN,SAAUoB,EAAKpB,SACfxD,KAAK,QACLyD,MAAOO,EAAOF,QAEhB5E,EAAAC,EAAAC,cAAC2F,EAAD,CACE1B,MAAM,QACNC,KAAK,QACLC,YAAY,iBACZvB,MAAO+B,EACPP,SAAUoB,EAAKpB,SACfC,MAAOO,EAAOD,QAEhB7E,EAAAC,EAAAC,cAAA,SACEY,KAAK,SACLgC,MAAM,iBACN3C,UAAU,wCAxGJ4D,aCgFXqC,oNA1EbxF,MAAQ,CACNyF,iBAAiB,KAGnBC,YAAc,SAAAvB,GACZnD,EAAKc,SAAS,CAAE2D,iBAAkBzE,EAAKhB,MAAMyF,qBAG/CE,oDAAgB,SAAApD,EAAO/B,EAAIqB,GAAX,OAAAQ,EAAAhD,EAAAoD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAKNC,IAAM+C,OAAN,8CAAAlF,OAA2DF,IALrD,OAMZqB,EAAS,CAAE3B,KAAM,iBAAkBO,QAASD,IANhCkC,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAD,EAAAmD,GAAAnD,EAAA,SAQZb,EAAS,CAAE3B,KAAM,iBAAkBO,QAASD,IARhC,wBAAAkC,EAAAO,SAAAV,EAAArB,KAAA,4IAYP,IAAA4D,EAAA5D,KAAA4E,EAG4B5E,KAAKhC,MAAMqB,QAAtCC,EAHDsF,EAGCtF,GAAIgD,EAHLsC,EAGKtC,KAAMQ,EAHX8B,EAGW9B,MAAOC,EAHlB6B,EAGkB7B,MACjBwB,EAAoBvE,KAAKlB,MAAzByF,gBAER,OACErG,EAAAC,EAAAC,cAAC8D,EAAD,KACG,SAAAlB,GAAS,IACAL,EAAaK,EAAbL,SACR,OACEzC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,UACGkE,EAAM,IACPpE,EAAAC,EAAAC,cAAA,KACEyG,QAASjB,EAAKY,YACdnG,UAAU,mBACVyG,MAAO,CAAEC,OAAQ,aAEnB7G,EAAAC,EAAAC,cAAA,KACEC,UAAU,eACVyG,MAAO,CAAEE,MAAO,MAAOD,OAAQ,UAAWE,MAAO,SACjDJ,QAASjB,EAAKa,cAAcX,KAAKF,EAAMtE,EAAIqB,KAE7CzC,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAE,gBAAAgB,OAAkBF,IACxBpB,EAAAC,EAAAC,cAAA,KACEC,UAAU,oBACVyG,MAAO,CACLC,OAAQ,UACRC,MAAO,QACPC,MAAO,QACPC,YAAa,YAKpBX,EACCrG,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,WAAyCyE,GACzC5E,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,WAAyC0E,IAEzC,eAnEId,cCqBPkD,mLApBX,OACEjH,EAAAC,EAAAC,cAAC8D,EAAD,KACG,SAAAlB,GAAS,IACA7B,EAAa6B,EAAb7B,SACR,OACEjB,EAAAC,EAAAC,cAACF,EAAAC,EAAMiH,SAAP,KACElH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBACZH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,WADF,SAGCc,EAASO,IAAI,SAAAL,GAAO,OACnBnB,EAAAC,EAAAC,cAACiH,EAAD,CAAStE,IAAK1B,EAAQC,GAAID,QAASA,gBAZ5B4C,aCHR,SAASqD,EAAMtH,GAC5B,OACEE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,yBACAH,EAAAC,EAAAC,cAAA,KAAGmH,MAAM,QAAT,iCACArH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAb,kBCLS,IAAAmH,EAAA,WACb,OACEtH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aACZH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,OADF,mBAGAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,iCCmCSoH,6MAxCb3G,MAAQ,CAAE4G,MAAO,GAAIC,KAAM,uFAEP,IAAA/B,EAAA5D,KAClB4F,MAAM,gDACHC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAA/D,GAAI,OAAI8B,EAAKhD,SAAS,CAAE8E,MAAO5D,EAAK4D,MAAOC,KAAM7D,EAAK6D,SAE9DK,QAAQC,IAAIjG,KAAKlB,wCAmBV,IAAAuE,EACiBrD,KAAKlB,MAArB4G,EADDrC,EACCqC,MAAOC,EADRtC,EACQsC,KACf,OACEzH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QACVqH,EACAC,WAlCQ1D,aCoCJiE,mLAtBX,OACEhI,EAAAC,EAAAC,cAAC+H,EAAD,KACEjI,EAAAC,EAAAC,cAACgI,EAAA,EAAD,KACElI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACiI,EAAD,CAAQpI,SAAS,oBACjBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAACkI,EAAA,EAAD,KACEpI,EAAAC,EAAAC,cAACmI,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWvB,IACjCjH,EAAAC,EAAAC,cAACmI,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,eAAeC,UAAW7D,IAC5C3E,EAAAC,EAAAC,cAACmI,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,oBAAoBC,UAAW1C,IACjD9F,EAAAC,EAAAC,cAACmI,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAWpB,IACtCpH,EAAAC,EAAAC,cAACmI,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,QAAQC,UAAWjB,IACrCvH,EAAAC,EAAAC,cAACmI,EAAA,EAAD,CAAOG,UAAWlB,gBAdhBvD,aCFE0E,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS5C,MACvB,2DCbN6C,IAASC,OAAO9I,EAAAC,EAAAC,cAAC6I,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMzB,KAAK,SAAA0B,GACjCA,EAAaC","file":"static/js/main.75622d36.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// Normal Function > function Header() {}\r\n// Arrow Function\r\nconst Header = props => {\r\n  //prop from App\r\n  const { branding } = props;\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fas fa-home\" /> Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n                <i className=\"fas fa-plus\" /> Add\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                <i className=\"fas fa-question\" /> About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: \"My App\"\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Context = React.createContext();\r\n//action.payload = data that has been sent from the component to get manipulate(eg. delete..etc)\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n    case \"UPDATE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: action => {\r\n      this.setState(state => reducer(state, action));\r\n    }\r\n  };\r\n\r\n  async componentDidMount() {\r\n    //axios\r\n    //  .get(\"https://jsonplaceholder.typicode.com/users\")\r\n    //  .then(res => this.setState({ contacts: res.data }));\r\n\r\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n    this.setState({ contacts: res.data });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n\r\n// wrap whole app inside provider (App.js render())\r\n// call consumer from component where state is gonna be used\r\n// dispatch => calls or invoke an action\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        className={classnames(\"form-control form-control-lg\", {\r\n          \"is-invalid\": error\r\n        })}\r\n        placeholder={placeholder}\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.string.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: \"text\"\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\n//import uuid from \"uuid\";\r\nimport axios from \"axios\";\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is required\" } });\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    //axios\r\n    //  .post(\"https://jsonplaceholder.typicode.com/users\", newContact)\r\n    //  .then(res => dispatch({ type: \"ADD_CONTACT\", payload: res.data }));\r\n\r\n    const res = await axios.post(\r\n      \"https://jsonplaceholder.typicode.com/users\",\r\n      newContact\r\n    );\r\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\r\n\r\n    this.setState({ name: \"\", email: \"\", phone: \"\", errors: {} });\r\n\r\n    //redirect to home page\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name...\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Enter Email...\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    type=\"email\"\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone...\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\n//import uuid from \"uuid\";\r\nimport axios from \"axios\";\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n\r\n    const extractedContact = res.data;\r\n\r\n    this.setState({\r\n      name: extractedContact.name,\r\n      email: extractedContact.email,\r\n      phone: extractedContact.phone\r\n    });\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is required\" } });\r\n      return;\r\n    }\r\n\r\n    const updateContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const { id } = this.props.match.params;\r\n\r\n    const res = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      updateContact\r\n    );\r\n\r\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\r\n\r\n    this.setState({ name: \"\", email: \"\", phone: \"\", errors: {} });\r\n\r\n    //redirect to home page\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name...\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Enter Email...\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    type=\"email\"\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone...\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Update Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from \"../../context\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Contact extends Component {\r\n  // static propTypes = {\r\n  //   name: PropTypes.string.isRequired,\r\n  //   email: PropTypes.string.isRequired,\r\n  //   phone: PropTypes.string.isRequired\r\n  // };\r\n  state = {\r\n    showContactInfo: false\r\n  };\r\n\r\n  onShowClick = e => {\r\n    this.setState({ showContactInfo: !this.state.showContactInfo });\r\n  };\r\n\r\n  onDeleteClick = async (id, dispatch) => {\r\n    //axios\r\n    //  .delete(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n    //  .then(res => dispatch({ type: \"DELETE_CONTACT\", payload: id }));\r\n    try {\r\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n    } catch (e) {\r\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    //Destructuring\r\n\r\n    const { id, name, email, phone } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {name}{\" \"}\r\n                <i\r\n                  onClick={this.onShowClick}\r\n                  className=\"fas fa-sort-down\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                />\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  style={{ color: \"red\", cursor: \"pointer\", float: \"right\" }}\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                />\r\n                <Link to={`contact/edit/${id}`}>\r\n                  <i\r\n                    className=\"fas fa-pencil-alt\"\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      color: \"black\",\r\n                      float: \"right\",\r\n                      marginRight: \"1rem\"\r\n                    }}\r\n                  />\r\n                </Link>\r\n              </h4>\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email : {email}</li>\r\n                  <li className=\"list-group-item\">Phone : {phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { Consumer } from \"../../context\";\r\n\r\n//sends data to Contact.js\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb-2\">\r\n                <span className=\"text-danger\">Contact</span> List\r\n              </h1>\r\n              {contacts.map(contact => (\r\n                <Contact key={contact.id} contact={contact} />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n// giving component keys is a must and there wont be any warning in console\r\nexport default Contacts;\r\n","import React from \"react\";\r\n\r\nexport default function About(props) {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manager</h1>\r\n      <p class=\"lead\">Simple app to manage contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  );\r\n}\r\n\r\n//cant use this keyword inside functional component\r\n//accessing params props.match,params.id\r\n","import React from \"react\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">\r\n        <span className=\"text-danger\">404</span> Page Not Found\r\n      </h1>\r\n      <p className=\"lead\">Sorry, page does not exist.</p>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nclass Test extends Component {\r\n  state = { title: \"\", body: \"\" };\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/posts/1\")\r\n      .then(response => response.json())\r\n      .then(data => this.setState({ title: data.title, body: data.body }));\r\n\r\n    console.log(this.state);\r\n  }\r\n\r\n  /* componentWillMount() {\r\n    console.log(\"componetWillMount\");\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    console.log(\"componetDidUpdate\");\r\n  }\r\n\r\n  componentWillUpdate() {\r\n    console.log(\"componetWillUpdate\");\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps, nextStaate) {\r\n    console.log(\"componetWillReceiveMount\");\r\n  } */\r\n\r\n  render() {\r\n    const { title, body } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>Test Component</h1>\r\n        <p className=\"lead\">\r\n          {title}\r\n          {body}\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Test;\r\n\r\n// life cycle methods are only available in class component\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\n//import Contact from \"./components/Contact\";\nimport Header from \"./components/layout/Header\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport { Provider } from \"./context\";\nimport Test from \"./components/test/Test\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n\n// BrowserRouter -> parent component stores all our routes\n// Route\n// Switch ->\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nserviceWorker.unregister();\n"],"sourceRoot":""}